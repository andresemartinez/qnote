#!/bin/bash
#
#   ___  _   _       _            
#  / _ \| \ | | ___ | |_ ___ 
# | | | |  \| |/ _ \| __/ _ \
# | |_| | |\  | (_) | ||  __/
#  \__\_\_| \_|\___/ \__\___|
#                                 
# A simple note taking "app" that is quick and easy to use
# v0.0.1 - https://github.com/andresemartinez/qnote
#

# Configurations

## Directory for notes. It should be created by the user before to using qnote.
NOTE_DIR="$HOME/notes"

## Note file extension. Leave empty if no extension needed.
NOTE_EXTENSION="md"

## Note editor of choice. Defaults to vim if EDITOR is not defined.
## Can be overriden to use an editor diferent than EDITOR.
NOTE_EDITOR=${EDITOR:-vim}


# Helper functions

normalize_note_name() {
    echo "$1" | sed 's/ /-/g'
}

validate_note_name() {
    [ -z "$1" ] && { echo "Note name required :S"; exit 1; }
}

build_note_file_name() {
    NOTE_NAME="$1"
    NORMALIZED_NOTE_NAME="$(normalize_note_name "$NOTE_NAME")"
    echo "${NORMALIZED_NOTE_NAME%*.$NOTE_EXTENSION}.$NOTE_EXTENSION"
}

build_note_path() {
    NOTE_NAME="$1"
    NOTE_FILE_NAME="$(build_note_file_name "$NOTE_NAME")"
    echo "$NOTE_DIR/$NOTE_FILE_NAME"
}


# Action functions

list_notes() {
    exa --long -a "$NOTE_DIR"
}

edit_note() {
    NOTE_NAME="$1"
    validate_note_name "$NOTE_NAME"
    $NOTE_EDITOR "$(build_note_path "$NOTE_NAME")"
}

delete_note() {
    NOTE_NAME="$1"
    validate_note_name "$NOTE_NAME"
    rm "$(build_note_path "$NOTE_NAME")"
}

copy_note() {
    NOTE_NAME="$1"
    validate_note_name "$NOTE_NAME"
    cat "$(build_note_path "$NOTE_NAME")" | wl-copy 
}

read_with_glow() {
    [ -z "$(which glow)" ] && { echo "Couldn't find glow. Is it installed? (https://github.com/charmbracelet/glow)"; exit 1; }
    if [ -z "$1" ]
    then
        NOTE_PATH="$NOTE_DIR"
    else
        NOTE_PATH="$(build_note_path "$1")"
    fi
    glow "$NOTE_PATH"
}

handle_invalid_option() {
    print_invalid_option_message "$1"
    print_help
    exit 1
}

print_invalid_option_message() {
    [ -z "$1" ] || echo "Invalid option ($1)"
}

print_help() {
    echo "Help!"
    echo "- l, list   : List notes"
    echo "- e, edit   : Create/Edit note (expects note name)"
    echo "- d, delete : Delete note (expects note name)"
    echo "- g, glow   : Read note with glow"
    echo "- cp, copy  : Copy note to clipboard (expects note name)"
    echo "- h, help   : Print help"
}

case "$1" in
    l  | list  ) list_notes ;;
    e  | edit  ) edit_note "$2" ;;
    d  | delete) delete_note "$2" ;;
    cp | copy  ) copy_note "$2" ;;
    g  | glow  ) read_with_glow "$2" ;;
    h  | help  ) print_help ;;
    *          ) handle_invalid_option "$1" ;;
esac
